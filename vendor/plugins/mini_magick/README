MiniMagick
==========

A ruby wrapper for ImageMagick command line.

Why?
---
I was using RMagick and loving it, but it was eating up huge amounts of memory. A simple script like this...

Magick::read("image.jpg") do |f|
 f.write("manipulated.jpg")
end

...would use over 100 Megs of Ram. On my local machine this wasn't a problem, but on my hosting server the ruby apps would crash because of their 100 Meg memory limit.

Solution!
---------
Using MiniMagick the ruby processes memory remains small (it spawns ImageMagick's command line program mogrify which takes up some memory as well, but is much smaller compared to RMagick)

MiniMagick gives you access to all the commandline options ImageMagick has (Found here http://www.imagemagick.org/script/mogrify.php)

Examples
--------

Want to make a thumbnail from a file...

image = MiniMagick::Image.from_file("input.jpg")
image.resize "100x100"
image.write("output.jpg")

Want to make a thumbnail from a blob...

image = MiniMagick::Image.from_blob(blob)
image.resize "100x100"
image.write("output.jpg")

Need to combine several options?

image = MiniMagick::Image.from_file("input.jpg")
image.combine_options do |c|
  c.sample "50%"
  c.rotate "-90>"
end
image.write("output.jpg")

Want to manipulate an image at its source (You won't have to write it out because the transformations are done on that file)

image = MiniMagick::Image.new("input.jpg")
image.resize "100x100"

Want to get some meta-information out?

image = MiniMagick::Image.from_file("input.jpg")
image[:width] # will get the width (you can also use :height and :format)
image["EXIF:BitsPerSample"] # It also can get all the EXIF tags
image["%m:%f %wx%h"] # Or you can use one of the many options of the format command found here http://www.imagemagick.org/script/command-line-options.php#format

Requirements
------------
You must have ImageMagick installed.

How To Install
--------------
If you downloaded the plugin version, just drop the plugin into RAILS_ROOT/plugins/

If you installed this as a gem, then to get it to work add <require "mini_magick"> to RAILS_ROOT/config/environment.rb

If you have just downloaded this files then copy the mini_magick.rb file into your RAILS_ROOT/lib directory and add <require "mini-magick"> to RAILS_ROOT/config/environment.rb

MiniMagick does NOT require rails though. All the code you need to use MiniMagick is located in the mini_magick/lib/mini_magick.rb file.


